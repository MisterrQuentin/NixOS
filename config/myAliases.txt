{
  fr = "nh os switch --hostname $(hostname) $HOME/zaneyos";
  fu = "nh os switch --hostname $(hostname) --update $HOME/zaneyos";
  zu = "sh <(curl -L https://gitlab.com/Zaney/zaneyos/-/raw/main/install-zaneyos.sh)";
  ncg = "nix-collect-garbage --delete-old && sudo nix-collect-garbage -d && sudo /run/current-system/bin/switch-to-configuration boot";
  cat = "bat";
  cd = "z";
  sw = "HOST=$HOST set_wall.sh";
  bqu = "backup_qutebrowser_urls.sh";
  ns = "nix-shell --pure --command zsh";
  l = "eza --color=always    -lFh";
  la = "eza --color=always   -lAFh";
  lr = "eza --color=always   -tRFh";
  lt = "eza --color=always   -ltFh";
  ldot = "eza --color=always -ld .*";
  lS = "eza --color=always   -lFSsh";
  lart = "eza --color=always -lFart";
  vids = "eza --color=always -ltFh *.{mkv,mp4,webm}";
  ll = "eza --color=always --long --git --icons=always --long --all --smart-group";
  lrt = "eza --color=always --long --git --icons=always --sort=modified --long --all --smart-group";
  lg = "lazygit";
  pman = "man -k . | fzf | awk '{print $1}' | xargs -r man -Tpdf | zathura -";
  search_books = "{ IFS= read -r d &&  find ~/Nextcloud-public/textbooks -iname \"*$d*\" -print; } <<<";
  search_all = "{ IFS= read -r d && sudo find / -iname \"*$d*\" -print; } <<<";
  sn = "slaunch journal $HOME/Nextcloud-public/bimmer_docs/logseq_chris/journals/";
  sh = "slaunch computer_help $HOME/Nextcloud-public/bimmer_docs/computer_help/";
  skh = "slaunch kris_pastebin $HOME/Nextcloud-public/bimmer_docs/kris_help/";
  skr = "slaunch kris_allaboutai $HOME/Nextcloud-public/bimmer_docs/kris_github/";
  sks = "slaunch kris_scripts $HOME/influencers/kris/";
  sls = "slaunch luke_scripts $HOME/influencers/luke/";
  sms = "slaunch matt_scripts $HOME/influencers/matt/";
  sds = "slaunch dt_scripts $HOME/influencers/dt/";
  sas = "slaunch influencers_scripts $HOME/influencers/";
  s = "sel_files $HOME/Videos/Li_Videos/ mpv";
  sl = "sel_files $HOME/Videos/luke/videos_terminal/ mpv";
  sj = "sel_files $HOME/Videos/jake@linux_videos/ mpv";
  sk = "sel_files $HOME/Videos/kris_videos/ mpv";
  sc = "sel_files $HOME/Videos/Chinese/ mpv";
  sm = "sel_files /run/media/$USER/Movies/ mpv";
  sy = "sel_files $HOME/Videos/youtube/ mpv";
  sb = "sel_files $HOME/Nextcloud-public/textbooks/ $PDFVIEWER";
  cdf = "{ IFS= read -r d && cd $(find \"$d\" -type d | fzf); } <<<";
  sudo = "sudo ";
  grep = "grep --color";
  sgrep = "grep -R -n -H -C 5 --exclude-dir={.git,.svn,CVS} ";
  tf = "tail -f";
  w = "wikipedia";
  p = "~/plotbtc/plotbtc";
  dud = "du -d 1 -h";
  duf = "du -sh *";
  ff = "find . -type f -name";
  vimdiff = "nvim -d";
  cfs = "nvim $HOME/private_files/scripts.sh";
  cfz = "nvim $XDG_CONFIG_HOME/zsh/.zshrc";
  cfe = "nvim $XDG_CONFIG_HOME/zsh/.zshenv";
  cfl = "nvim $HOME/.config/nvim/lua/custom/init.lua";
  cfpl = "nvim $HOME/.config/nvim/lua/custom/plugins.lua";
  cfa = "nvim $HOME/private_files/myAliases.txt";
  cfb = "nvim $HOME/.bashrc";
  cfu = "nvim $HOME/private_files/urls_newsboat";
  cft = "nvim $HOME/.tmux.conf";
  play = "mono $HOME/Downloads/StarTrek/StarTrek/Program.exe";
  ga = "git add";
  gc = "git clone";
  gp = "git push";
  mpdf = "zathura $HOME/Nextcloud-public/bimmer_docs/building_mouseless_environment.pdf &";
  xup = "xrdb $XDG_CONFIG_HOME/X11/.Xresources";
  pun = "sudo pacman -Rns";
  pup = "sudo pacman -Syu";
  key = "sudo pacman -S archlinux-keyring";
  pin = "pacman -Qeq";
  paurin = "pacman -Qmq";
  pclean = "sudo pacman -Sc";
  v = "nvim";
  sv = "sudo nvim";
  vf = "nvim $(fzf)";
  vi = "nvim";
  vim = "nvim";
  clip = "xclip -o -selection primary && echo \"\r\" && xclip -o -selection clipboard";
  pop = "cd ..";
  m = "cd $HOME/Music";
  cdh = "cd ~/Nextcloud-public/bimmer_docs/computer_help";
  cda = "cd ~/Nextcloud-public/bimmer_docs/scripts/arch";
  cdl = "cd $HOME/.local/bin";
  desk = "cd ~/Desktop";
  specter = "tmux new-session -d -s specter \"exec $HOME/Spector_chris/Specter-1.10.5.AppImage\"";
  todo = "tmux new-session -d -s todo \"exec conda deactivate; python $HOME/QTodoTxt2/bin/qtodotxt.pyw\"";
  log = "tmux new-session -d -s logseq \"exec $HOME/Logseq-linux-x64-0.10.8.AppImage\"";
  whirl2 = "tmux new-session -d -s whirl \"exec $HOME/Nextcloud-private/whirlpool-gui/whirlpool-gui-0.10.3.AppImage\"";
  yubi = "tmux new-session -d -s yubi \"exec $HOME/Nextcloud-public/bimmer_docs/yubico-authenticator-6.3.0-linux/authenticator\"";
  img = "tmux new-session -d -s img \"exec /usr/bin/gwenview\"";
  bisq = "tmux new-session -d -s bisq \"exec /opt/bisq/bin/Bisq -useTorForBtc=true\"";
  pt = "tmux new-session -d -s packet \"exec /opt/pt/packettracer\"";
  lv = "nvim -c':e#<1'";
  runbloop = "proxychains4 $HOME/Downloads/bloop_0.5.3_amd64.AppImage";
  sess = "proxychains4 session-desktop --no-sandbox --in-process-gpu &";
  wea = "curl 'v2.wttr.in/Phoenix\?u'";
  weat = "curl 'v2.wttr.in/Tucson\?u'";
  weah = "curl 'v2.wttr.in/Honolulu\?u'";
  weaf = "curl 'v2.wttr.in/Flagstaff\?u'";
  weal = "curl 'v2.wttr.in/Las+Vegas\?u'";
  weas = "curl 'v2.wttr.in/Shenyang\?u'";
  weax = "curl 'v2.wttr.in/Xiamen\?u'";
  weach = "curl 'v2.wttr.in/Chengdu\?u'";
  wead = "curl 'v2.wttr.in/Dallas\?u'";
  weac = "curl 'v2.wttr.in/Chicago\?u'";
  weab = "curl 'v2.wttr.in/Beijing\?u'";
  weag = "curl 'v2.wttr.in/Mexico+City\?u'";
  weap = "curl 'v2.wttr.in/Puerto+Vallarta\?u'";
  weachina = "curl 'v2.wttr.in/Shen+Yang\?u'";
  weachung = "curl 'v2.wttr.in/Chung+Qing\?u'";
  weazh = "curl 'v2.wttr.in/Zhang+Zhou\?u'";
  weacan = "curl 'v2.wttr.in/Cancun\?u'";
  weam = "curl 'v2.wttr.in/Miami\?u'";
  yta = "yt -x -f bestaudio/best";
  xp = "xprop | grep WM_CLASS";
  node1unlock = "pass node1 | tr -d '\\n' | ssh -i ~/.ssh/dropbear -p 5768 -o \"HostKeyAlgorithms ssh-rsa\" root@192.168.1.64 \"cryptroot-unlock\"";
  node1unlock_remote = "pass node1 | tr -d '\\n' | ssh -i ~/.ssh/dropbear -p 5768 -o \"HostKeyAlgorithms ssh-rsa\" root@txcloud.dedyn.io \"cryptroot-unlock\"";
  dads_cloud = "sshfs encrypted_drive_remote: $HOME/Encrypted-Cloud";
  phone = "sshfs phone: $HOME/Phone -o follow_symlinks -p 8022";
  backup = "sshfs backup_cloud:/mnt/backup $HOME/Backup";
  qtile = "sshfs hypr_qtile:$HOME $HOME/Qtile";
  popos = "sshfs popos:/home/ftsesp $HOME/PopOS";
  backup_remote = "sshfs backup_cloud_clear:/mnt/backup $HOME/Backup";
  backup_remote_tor = "torsocks sshfs cloud_tor:/mnt/backup $HOME/Backup";
  truenas-cloud = "nix-shell -p nfs-utils --run \"sudo mount -t nfs 192.168.1.34:/mnt/tank/cloud-and-backup $HOME/Cloud\"";
  qnap-cloud = "nix-shell -p nfs-utils --run \"sudo mount -t nfs 192.168.1.40:/Chris-Archive ~/Cloud-QNAP\"";
  qnap-media = "nix-shell -p nfs-utils --run \"sudo mount -t nfs 192.168.1.40:/Media ~/Media-QNAP\"";
  eclipse = "sshfs eclipse: $HOME/Eclipse";
  cloud_remote = "sshfs cloud_clear:/mnt/cloud $HOME/Cloud";
  cloud_remote_tor = "torsocks sshfs cloud_tor:/mnt/cloud $HOME/Cloud";
  prox_remote = "sshfs prox_clear:/media $HOME/Movies -p 49176";
  prox2_remote = "sshfs prox_clear:/media2 $HOME/Movies2 -p 49176";
  prox3_remote = "sshfs prox_clear:/media2 $HOME/Movies3 -p 49177";
  sparrow = "sshfs sparrow: $HOME/Sparrow";
  sparrow1 = "sshfs sparrow1: $HOME/Sparrow";
  hypr = "sshfs hypr:$HOME $HOME/Hypr";
  quentin = "sshfs jedwick_phoenix: $HOME/Quentin";
  movies = "sshfs proxmox:/media $HOME/Movies -p 49176";
  movies2 = "sshfs proxmox:/media2 $HOME/Movies2 -p 49176";
  movies4 = "sshfs proxmox:/media3 $HOME/Movies4 -p 49176";
  movies4_remote = "sshfs proxmox_remote:/media3 $HOME/Movies4 -p 49176";
  dc = "umount $HOME/Cloud";
  vid = "mpv";
  hn = "cd $HOME/go/bin && ./hn-text";
  nostr = "cd $HOME/nostrudel && pnpm dev";
  olm = "cd $HOME/ollama-webui/backend/ && source venv/bin/activate && ./start.sh";
  llm = "cd $HOME/text-generation-webui && ./start_linux.sh";
  owui = "cd $HOME/ollama-ui && docker run -d --network=host -v open-webui:/app/backend/data -e OLLAMA_BASE_URL=http://127.0.0.1:11434 --name open-webui --restart always ghcr.io/open-webui/open-webui:main";
  stcs = "cd $HOME/stable-cascade-one-click-installer && ./run.sh";
  flux = "cd $HOME/ComfyUI && conda activate flux && python main.py";
  llm2 = "cd $HOME/ollama-ui && python3 -m http.server --bind 127.0.0.1";
  pgpt = "cd $HOME/privateGPT && PGPT_PROFILES=local make run";
  summarize = "wl-paste | fabric -m llama3:latest -p extract_wisdom --stream";
  actconda = "source /opt/anaconda/bin/activate root && conda activate privategpt";
  stable = "cd $HOME/stable-diffusion-webui && ./webui.sh";
  silly1 = "$HOME/Downloads/koboldcpp-linux-x64 --config $HOME/Downloads/maid.kcpps";
  silly1a = "$HOME/Downloads/koboldcpp-linux-x64 --config $HOME/Downloads/mxtral.kcpps";
  silly2 = "cd $HOME/SillyTavern/ && bash start.sh";
  chg_yubi = "gpg-connect-agent \"scd serialno\" \"learn --force\" /bye";
  rbt_yubi = "gpg-connect-agent updatestartuptty /bye >/dev/null";
  fix_yubi = "gpg-connect-agent reloadagent /bye";
  ef = "vi $(fzf)";
  fast = "xset r rate 300 50";
  ports = "sudo lsof -i -P -n |grep LISTEN";
  zh = "ollama run llama2-uncensored --verbose \"summarize the first ten articles from this news site: https://www.zerohedge.com\"";
}
